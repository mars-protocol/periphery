{
  "contract_name": "mars-vesting",
  "contract_version": "1.1.2",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "denom",
      "owner",
      "unlock_schedule"
    ],
    "properties": {
      "denom": {
        "description": "Denomination of the token to be vested",
        "type": "string"
      },
      "owner": {
        "description": "The contract's owner",
        "type": "string"
      },
      "unlock_schedule": {
        "description": "Schedule for token unlocking; this schedule is the same for all users",
        "allOf": [
          {
            "$ref": "#/definitions/Schedule"
          }
        ]
      }
    },
    "additionalProperties": false,
    "definitions": {
      "Schedule": {
        "type": "object",
        "required": [
          "cliff",
          "duration",
          "start_time"
        ],
        "properties": {
          "cliff": {
            "description": "Time before with no token is to be vested/unlocked",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "duration": {
            "description": "Duration of the vesting/unlocking process. At time `start_time + duration`, the tokens are vested/unlocked in full",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "start_time": {
            "description": "Time when vesting/unlocking starts",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        "additionalProperties": false
      }
    }
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "description": "Update the contract's configurations",
        "type": "object",
        "required": [
          "update_config"
        ],
        "properties": {
          "update_config": {
            "type": "object",
            "required": [
              "new_cfg"
            ],
            "properties": {
              "new_cfg": {
                "$ref": "#/definitions/Config_for_String"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Create a new vesting position for a user",
        "type": "object",
        "required": [
          "create_position"
        ],
        "properties": {
          "create_position": {
            "type": "object",
            "required": [
              "user",
              "vest_schedule"
            ],
            "properties": {
              "user": {
                "type": "string"
              },
              "vest_schedule": {
                "$ref": "#/definitions/Schedule"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Terminate a vesting position, collect all unvested tokens",
        "type": "object",
        "required": [
          "terminate_position"
        ],
        "properties": {
          "terminate_position": {
            "type": "object",
            "required": [
              "user"
            ],
            "properties": {
              "user": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Withdraw vested and unlocked MARS tokens",
        "type": "object",
        "required": [
          "withdraw"
        ],
        "properties": {
          "withdraw": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "Config_for_String": {
        "type": "object",
        "required": [
          "denom",
          "owner",
          "unlock_schedule"
        ],
        "properties": {
          "denom": {
            "description": "Denomination of the token to be vested",
            "type": "string"
          },
          "owner": {
            "description": "The contract's owner",
            "type": "string"
          },
          "unlock_schedule": {
            "description": "Schedule for token unlocking; this schedule is the same for all users",
            "allOf": [
              {
                "$ref": "#/definitions/Schedule"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Schedule": {
        "type": "object",
        "required": [
          "cliff",
          "duration",
          "start_time"
        ],
        "properties": {
          "cliff": {
            "description": "Time before with no token is to be vested/unlocked",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "duration": {
            "description": "Duration of the vesting/unlocking process. At time `start_time + duration`, the tokens are vested/unlocked in full",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "start_time": {
            "description": "Time when vesting/unlocking starts",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        "additionalProperties": false
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "description": "The contract's configurations",
        "type": "object",
        "required": [
          "config"
        ],
        "properties": {
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Amount of MARS tokens of a vesting recipient current locked in the contract",
        "type": "object",
        "required": [
          "voting_power"
        ],
        "properties": {
          "voting_power": {
            "type": "object",
            "required": [
              "user"
            ],
            "properties": {
              "user": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Enumerate all vesting recipients and return their current voting power",
        "type": "object",
        "required": [
          "voting_powers"
        ],
        "properties": {
          "voting_powers": {
            "type": "object",
            "properties": {
              "limit": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "start_after": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Details of a recipient's vesting position\n\nNOTE: This query depends on block time, therefore it may not work with time travel queries. In such cases, use WASM raw query instead.",
        "type": "object",
        "required": [
          "position"
        ],
        "properties": {
          "position": {
            "type": "object",
            "required": [
              "user"
            ],
            "properties": {
              "user": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Enumerate all vesting positions\n\nNOTE: This query depends on block time, therefore it may not work with time travel queries. In such cases, use WASM raw query instead.",
        "type": "object",
        "required": [
          "positions"
        ],
        "properties": {
          "positions": {
            "type": "object",
            "properties": {
              "limit": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "start_after": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "migrate": null,
  "sudo": null,
  "responses": {
    "config": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Config_for_String",
      "type": "object",
      "required": [
        "denom",
        "owner",
        "unlock_schedule"
      ],
      "properties": {
        "denom": {
          "description": "Denomination of the token to be vested",
          "type": "string"
        },
        "owner": {
          "description": "The contract's owner",
          "type": "string"
        },
        "unlock_schedule": {
          "description": "Schedule for token unlocking; this schedule is the same for all users",
          "allOf": [
            {
              "$ref": "#/definitions/Schedule"
            }
          ]
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Schedule": {
          "type": "object",
          "required": [
            "cliff",
            "duration",
            "start_time"
          ],
          "properties": {
            "cliff": {
              "description": "Time before with no token is to be vested/unlocked",
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "duration": {
              "description": "Duration of the vesting/unlocking process. At time `start_time + duration`, the tokens are vested/unlocked in full",
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "start_time": {
              "description": "Time when vesting/unlocking starts",
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      }
    },
    "position": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PositionResponse",
      "type": "object",
      "required": [
        "total",
        "unlocked",
        "user",
        "vest_schedule",
        "vested",
        "withdrawable",
        "withdrawn"
      ],
      "properties": {
        "total": {
          "description": "Total amount of MARS tokens allocated to this recipient",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        },
        "unlocked": {
          "description": "Amount of tokens that have been unlocked, according to the unlocking schedule",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        },
        "user": {
          "description": "Address of the user",
          "type": "string"
        },
        "vest_schedule": {
          "description": "This vesting position's vesting schedule",
          "allOf": [
            {
              "$ref": "#/definitions/Schedule"
            }
          ]
        },
        "vested": {
          "description": "Amount of tokens that have been vested, according to the vesting schedule",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        },
        "withdrawable": {
          "description": "Amount of tokens that can be withdrawn now, defined as the smaller of vested and unlocked amounts, minus the amount already withdrawn",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        },
        "withdrawn": {
          "description": "Amount of tokens that have already been withdrawn",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Schedule": {
          "type": "object",
          "required": [
            "cliff",
            "duration",
            "start_time"
          ],
          "properties": {
            "cliff": {
              "description": "Time before with no token is to be vested/unlocked",
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "duration": {
              "description": "Duration of the vesting/unlocking process. At time `start_time + duration`, the tokens are vested/unlocked in full",
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "start_time": {
              "description": "Time when vesting/unlocking starts",
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        },
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "positions": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Array_of_PositionResponse",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PositionResponse"
      },
      "definitions": {
        "PositionResponse": {
          "type": "object",
          "required": [
            "total",
            "unlocked",
            "user",
            "vest_schedule",
            "vested",
            "withdrawable",
            "withdrawn"
          ],
          "properties": {
            "total": {
              "description": "Total amount of MARS tokens allocated to this recipient",
              "allOf": [
                {
                  "$ref": "#/definitions/Uint128"
                }
              ]
            },
            "unlocked": {
              "description": "Amount of tokens that have been unlocked, according to the unlocking schedule",
              "allOf": [
                {
                  "$ref": "#/definitions/Uint128"
                }
              ]
            },
            "user": {
              "description": "Address of the user",
              "type": "string"
            },
            "vest_schedule": {
              "description": "This vesting position's vesting schedule",
              "allOf": [
                {
                  "$ref": "#/definitions/Schedule"
                }
              ]
            },
            "vested": {
              "description": "Amount of tokens that have been vested, according to the vesting schedule",
              "allOf": [
                {
                  "$ref": "#/definitions/Uint128"
                }
              ]
            },
            "withdrawable": {
              "description": "Amount of tokens that can be withdrawn now, defined as the smaller of vested and unlocked amounts, minus the amount already withdrawn",
              "allOf": [
                {
                  "$ref": "#/definitions/Uint128"
                }
              ]
            },
            "withdrawn": {
              "description": "Amount of tokens that have already been withdrawn",
              "allOf": [
                {
                  "$ref": "#/definitions/Uint128"
                }
              ]
            }
          },
          "additionalProperties": false
        },
        "Schedule": {
          "type": "object",
          "required": [
            "cliff",
            "duration",
            "start_time"
          ],
          "properties": {
            "cliff": {
              "description": "Time before with no token is to be vested/unlocked",
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "duration": {
              "description": "Duration of the vesting/unlocking process. At time `start_time + duration`, the tokens are vested/unlocked in full",
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "start_time": {
              "description": "Time when vesting/unlocking starts",
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        },
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "voting_power": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "VotingPowerResponse",
      "type": "object",
      "required": [
        "user",
        "voting_power"
      ],
      "properties": {
        "user": {
          "description": "Address of the user",
          "type": "string"
        },
        "voting_power": {
          "description": "The user's current voting power, i.e. the amount of MARS tokens locked in vesting contract",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "voting_powers": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Array_of_VotingPowerResponse",
      "type": "array",
      "items": {
        "$ref": "#/definitions/VotingPowerResponse"
      },
      "definitions": {
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        },
        "VotingPowerResponse": {
          "type": "object",
          "required": [
            "user",
            "voting_power"
          ],
          "properties": {
            "user": {
              "description": "Address of the user",
              "type": "string"
            },
            "voting_power": {
              "description": "The user's current voting power, i.e. the amount of MARS tokens locked in vesting contract",
              "allOf": [
                {
                  "$ref": "#/definitions/Uint128"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      }
    }
  }
}
